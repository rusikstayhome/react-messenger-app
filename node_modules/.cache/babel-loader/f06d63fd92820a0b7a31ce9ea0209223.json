{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alenr\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\chat-react\\\\src\\\\pages\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Avatar from '../user.jpg';\nimport Camera from \"../components/svg/Camera\";\nimport Delete from \"../components/svg/Delete\";\nimport { storage, db, auth } from \"../firebase\";\nimport { ref, getDownloadURL, uploadBytes, deleteObject } from 'firebase/storage';\nimport { getDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [img, setImg] = useState('');\n  const [user, setUser] = useState('');\n  const navigate = useNavigate('');\n  useEffect(() => {\n    getDoc(doc(db, 'users', auth.currentUser.uid)).then(docSnap => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n\n    if (img) {\n      const uploadImg = async () => {\n        const imgRef = ref(storage, `avatar/${new Date().getTime()} - ${img.name}`);\n\n        try {\n          if (user.avatarPath) {\n            await deleteObject(ref(storage, user.avatarPath));\n          }\n\n          const snap = await uploadBytes(imgRef, img);\n          const url = await getDownloadURL(ref(storage, snap.ref.fullPath));\n          await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n            avatar: url,\n            avatarPath: snap.ref.fullPath\n          });\n          setImg('');\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      uploadImg();\n    }\n  }, [img]);\n\n  const deleteImage = async () => {\n    try {\n      const confirm = window.confirm('Delete avatar?');\n\n      if (confirm) {\n        await deleteObject(ref(storage, user.avatarPath));\n        await updateDoc(doc(db, 'users', auth.currentUser.uid), {\n          avatar: '',\n          avatarPath: ''\n        });\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return user ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar || Avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"photo\",\n              children: /*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), user.avatar ? /*#__PURE__*/_jsxDEV(Delete, {\n              deleteImage: deleteImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 44\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"photo\",\n              onChange: e => setImg(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Joined on: \", user.createdAt.toDate().toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(Profile, \"gs2zjkqrRlBH3EsAbTXxHApg8/o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Avatar","Camera","Delete","storage","db","auth","ref","getDownloadURL","uploadBytes","deleteObject","getDoc","doc","updateDoc","useNavigate","Profile","img","setImg","user","setUser","navigate","currentUser","uid","then","docSnap","exists","data","uploadImg","imgRef","Date","getTime","name","avatarPath","snap","url","fullPath","avatar","err","console","log","deleteImage","confirm","window","replace","display","e","target","files","email","createdAt","toDate","toDateString"],"sources":["C:/Users/alenr/OneDrive/Рабочий стол/chat-react/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Avatar from '../user.jpg';\r\nimport Camera from \"../components/svg/Camera\";\r\nimport Delete from \"../components/svg/Delete\";\r\nimport { storage, db, auth } from \"../firebase\";\r\nimport { ref, getDownloadURL, uploadBytes, deleteObject } from 'firebase/storage';\r\nimport { getDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n    const [img, setImg] = useState('')\r\n    const [user, setUser] = useState('');\r\n    const navigate = useNavigate('');\r\n\r\n    useEffect(() => {\r\n        getDoc(doc(db, 'users', auth.currentUser.uid))\r\n            .then((docSnap) => {\r\n                if (docSnap.exists) {\r\n                    setUser(docSnap.data());\r\n                }\r\n            });\r\n        if (img) {\r\n            const uploadImg = async () => {\r\n                const imgRef = ref(\r\n                    storage,\r\n                    `avatar/${new Date().getTime()} - ${img.name}`\r\n                );\r\n\r\n\r\n                try {\r\n\r\n                    if (user.avatarPath) {\r\n                        await deleteObject(ref(storage, user.avatarPath))\r\n                    }\r\n\r\n                    const snap = await uploadBytes(imgRef, img);\r\n                    const url = await getDownloadURL(ref(storage, snap.ref.fullPath))\r\n                    await updateDoc(doc(db, 'users', auth.currentUser.uid), {\r\n                        avatar: url,\r\n                        avatarPath: snap.ref.fullPath\r\n                    });\r\n\r\n                    setImg('');\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            };\r\n            uploadImg();\r\n\r\n        }\r\n    }, [img]);\r\n\r\n    const deleteImage = async () => {\r\n        try {\r\n            const confirm = window.confirm('Delete avatar?')\r\n            if (confirm) {\r\n                await deleteObject(ref(storage, user.avatarPath))\r\n\r\n                await updateDoc(doc(db, 'users', auth.currentUser.uid), {\r\n                    avatar: '',\r\n                    avatarPath: ''\r\n                })\r\n                navigate(\"/\", { replace: true });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    return user ? (\r\n        <section className=\"profile\">\r\n            <div className=\"profile_container\">\r\n                <div className=\"img_container\">\r\n                    <img src={user.avatar || Avatar} alt=\"\" />\r\n                    <div className=\"overlay\">\r\n                        <div>\r\n                            <label htmlFor=\"photo\">\r\n                                <Camera />\r\n                            </label>\r\n                            {user.avatar ? <Delete deleteImage={deleteImage} /> : null}\r\n                            <input type=\"file\" accept=\"image/*\" style={{ display: 'none' }} id='photo' onChange={e => setImg(e.target.files[0])} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text_container\">\r\n                    <h3>{user.name}</h3>\r\n                    <p>{user.email}</p>\r\n                    <hr />\r\n                    <small>Joined on: {user.createdAt.toDate().toDateString()}</small>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    ) : null\r\n};\r\n\r\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}