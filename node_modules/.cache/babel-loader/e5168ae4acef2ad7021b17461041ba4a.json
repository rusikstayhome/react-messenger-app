{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alenr\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\chat-react\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth } from '../firebase';\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport User from \"../components/User\";\nimport MessageForm from \"../components/MessageForm\";\nimport Message from \"../components/Message\";\nimport Profile from \"./Profile\"; // import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [chat, setChat] = useState('');\n  const [text, setText] = useState('');\n  const [msgs, setMsgs] = useState([]);\n  const [autoMsgs, setAutoMsgs] = useState(null);\n  const [search, setSearch] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState('');\n  const user1 = auth.currentUser.uid;\n  useEffect(() => {\n    const usersRef = collection(db, 'users');\n    const q = query(usersRef, where('uid', 'not-in', [user1]));\n    const unsub = onSnapshot(q, querySnapshot => {\n      let users = [];\n      querySnapshot.forEach(doc => {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return () => unsub();\n  }, []);\n  useEffect(() => {\n    const usersRef = collection(db, 'users');\n    const q = query(usersRef, orderBy('lastMsg', 'desc'));\n    const unsub = onSnapshot(q, querySnapshot => {\n      let users = [];\n      querySnapshot.forEach(doc => {\n        users.push(doc.data());\n      });\n      setUsers(users.filter(user => user.uid !== user1));\n    });\n    return () => unsub();\n  }, []);\n\n  const searchFunction = e => {\n    setSearch(e);\n\n    if (search !== '') {\n      const filtered = users.filter(user => {\n        return user.name.toLowerCase().includes(e.toLowerCase());\n      });\n      setFilteredUsers(filtered);\n    } else setFilteredUsers(users);\n  };\n\n  const selectUser = async user => {\n    setChat(user); // console.log(user);\n\n    const user2 = user.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    const msgsRef = collection(db, 'messages', id, 'chat');\n    const q = query(msgsRef, orderBy('createdAt', 'asc'));\n    onSnapshot(q, querySnapshot => {\n      let msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setMsgs(msgs);\n      console.log(msgs);\n    });\n    const docSnap = await getDoc(doc(db, 'lastMsg', id));\n\n    if (docSnap.data().from !== user1) {\n      await updateDoc(doc(db, 'lastMsg', id), {\n        unread: false\n      });\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user2 = chat.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    await updateDoc(doc(db, \"users\", user1), {\n      lastMsg: Timestamp.fromDate(new Date())\n    });\n    await addDoc(collection(db, 'messages', id, 'chat'), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date())\n    });\n    await setDoc(doc(db, 'lastMsg', id), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      unread: true\n    });\n    setText('');\n    setAutoMsgs(null);\n    setTimeout(() => {\n      axios.get('https://api.chucknorris.io/jokes/random').then(res => {\n        let autoMsgs = {\n          text: res.data.value,\n          from: user2,\n          to: user1,\n          createdAt: Timestamp.fromDate(new Date()),\n          unread: true\n        };\n        updateDoc(doc(db, \"users\", user2), {\n          text: res.data.value,\n          lastMsg: Timestamp.fromDate(new Date())\n        });\n        addDoc(collection(db, 'messages', user2, 'chat'), {\n          text: res.data.value,\n          from: user2,\n          to: user1,\n          createdAt: Timestamp.fromDate(new Date())\n        });\n        setDoc(doc(db, 'lastMsg', user2), {\n          text: res.data.value,\n          from: user2,\n          to: user1,\n          createdAt: Timestamp.fromDate(new Date()),\n          unread: true\n        });\n        setMsgs(current => [...current, autoMsgs]);\n      });\n    }, 10000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users_container\",\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        searchFunction: searchFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), search.length >= 1 ? filteredUsers.map(user => /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        selectUser: selectUser,\n        user1: user1,\n        chat: chat\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)) : users.sort((a, b) => b.lastMsg - a.lastMsg).map(user => /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        selectUser: selectUser,\n        user1: user1,\n        chat: chat\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages_container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages_user\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: msgs.length ? msgs.map((msg, i) => /*#__PURE__*/_jsxDEV(Message, {\n            msg: msg,\n            user1: user1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 38\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n          handleSubmit: handleSubmit,\n          text: text,\n          setText: setText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"no_conv\",\n        children: \"Select a user to start conversation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"S7ZT7oFCTcX3BUyoS48B/vNxMIc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","setDoc","doc","getDoc","updateDoc","User","MessageForm","Message","Profile","Home","users","setUsers","chat","setChat","text","setText","msgs","setMsgs","autoMsgs","setAutoMsgs","search","setSearch","filteredUsers","setFilteredUsers","user1","currentUser","uid","usersRef","q","unsub","querySnapshot","forEach","push","data","filter","user","searchFunction","e","filtered","name","toLowerCase","includes","selectUser","user2","id","msgsRef","console","log","docSnap","from","unread","handleSubmit","preventDefault","lastMsg","fromDate","Date","to","createdAt","setTimeout","axios","get","then","res","value","current","length","map","sort","a","b","msg","i"],"sources":["C:/Users/alenr/OneDrive/Рабочий стол/chat-react/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db, auth } from '../firebase';\r\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport User from \"../components/User\";\r\nimport MessageForm from \"../components/MessageForm\";\r\nimport Message from \"../components/Message\";\r\nimport Profile from \"./Profile\";\r\n// import axios from 'axios';\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [chat, setChat] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [autoMsgs, setAutoMsgs] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [filteredUsers, setFilteredUsers] = useState('');\r\n\r\n\r\n  const user1 = auth.currentUser.uid\r\n  useEffect(() => {\r\n    const usersRef = collection(db, 'users')\r\n\r\n    const q = query(usersRef, where('uid', 'not-in', [user1]));\r\n    const unsub = onSnapshot(q, querySnapshot => {\r\n      let users = []\r\n      querySnapshot.forEach(doc => {\r\n        users.push(doc.data())\r\n      })\r\n      setUsers(users);\r\n    });\r\n\r\n    return () => unsub();\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const usersRef = collection(db, 'users')\r\n\r\n    const q = query(usersRef, orderBy('lastMsg', 'desc'));\r\n    const unsub = onSnapshot(q, querySnapshot => {\r\n      let users = []\r\n      querySnapshot.forEach(doc => {\r\n        users.push(doc.data())\r\n      })\r\n      setUsers(users.filter(user => user.uid !== user1));\r\n    });\r\n\r\n    return () => unsub();\r\n\r\n\r\n  }, []);\r\n\r\n  const searchFunction = (e) => {\r\n    setSearch(e);\r\n    if (search !== '') {\r\n      const filtered = users.filter(user => {\r\n        return user.name.toLowerCase().includes(e.toLowerCase())\r\n      });\r\n      setFilteredUsers(filtered);\r\n    } else setFilteredUsers(users);\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const selectUser = async (user) => {\r\n    setChat(user);\r\n    // console.log(user);\r\n\r\n    const user2 = user.uid;\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n\r\n    const msgsRef = collection(db, 'messages', id, 'chat');\r\n    const q = query(msgsRef, orderBy('createdAt', 'asc'));\r\n\r\n    onSnapshot(q, querySnapshot => {\r\n      let msgs = []\r\n      querySnapshot.forEach(doc => {\r\n        msgs.push(doc.data())\r\n      })\r\n      setMsgs(msgs)\r\n      console.log(msgs)\r\n\r\n    })\r\n\r\n    const docSnap = await getDoc(doc(db, 'lastMsg', id))\r\n    if (docSnap.data().from !== user1) {\r\n      await updateDoc(doc(db, 'lastMsg', id), { unread: false })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user2 = chat.uid\r\n\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`\r\n\r\n    await updateDoc(doc(db, \"users\", user1), {\r\n      lastMsg: Timestamp.fromDate(new Date())\r\n    })\r\n\r\n    await addDoc(collection(db, 'messages', id, 'chat'), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date())\r\n    });\r\n\r\n    await setDoc(doc(db, 'lastMsg', id), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      unread: true\r\n    })\r\n    setText('');\r\n    setAutoMsgs(null);\r\n\r\n    setTimeout(() => {\r\n      axios.get('https://api.chucknorris.io/jokes/random')\r\n        .then(res => {\r\n\r\n          let autoMsgs = {\r\n            text: res.data.value,\r\n            from: user2,\r\n            to: user1,\r\n            createdAt: Timestamp.fromDate(new Date()),\r\n            unread: true\r\n          };\r\n          updateDoc(doc(db, \"users\", user2), {\r\n            text: res.data.value,\r\n            lastMsg: Timestamp.fromDate(new Date())\r\n          })\r\n          addDoc(collection(db, 'messages', user2, 'chat'), {\r\n            text: res.data.value,\r\n            from: user2,\r\n            to: user1,\r\n            createdAt: Timestamp.fromDate(new Date())\r\n          });\r\n          setDoc(doc(db, 'lastMsg', user2), {\r\n            text: res.data.value,\r\n            from: user2,\r\n            to: user1,\r\n            createdAt: Timestamp.fromDate(new Date()),\r\n            unread: true\r\n          })\r\n          setMsgs(current => [...current, autoMsgs]);\r\n\r\n        })\r\n\r\n    }, 10000)\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"home_container\">\r\n      <div className=\"users_container\">\r\n        <Profile searchFunction={searchFunction} />\r\n\r\n        {search.length >= 1 ?\r\n          filteredUsers.map(user =>\r\n            <User key={user.uid} user={user} selectUser={selectUser} user1={user1} chat={chat} />)\r\n\r\n          :\r\n\r\n          users.sort((a, b) => b.lastMsg - a.lastMsg).map(user =>\r\n            <User key={user.uid} user={user} selectUser={selectUser} user1={user1} chat={chat} />)\r\n\r\n        }\r\n      </div>\r\n      <div className=\"messages_container\">\r\n        {chat ? (\r\n          <>\r\n            <div className=\"messages_user\">\r\n              <h3>{chat.name}</h3>\r\n            </div>\r\n            <div className=\"messages\">\r\n              {msgs.length ?\r\n                msgs.map((msg, i) => <Message key={i} msg={msg} user1={user1} />)\r\n                : null}\r\n\r\n\r\n\r\n              {/* {autoMsgs && <div className={`message_wrapper`}\r\n              >\r\n                <p className='friend'>\r\n                  <img src={Img} alt='avatar' />\r\n                  <span>{autoMsgs.text}</span>\r\n                  <br />\r\n                  <small>\r\n                    <Moment fromNow>\r\n\r\n                      {autoMsgs.createdAt && autoMsgs.createdAt.toDate()}\r\n\r\n                    </Moment>\r\n                    /{autoMsgs.createdAt && autoMsgs.createdAt.toDate().toDateString()}\r\n\r\n                  </small>\r\n                </p>\r\n              </div>} */}\r\n            </div>\r\n            <MessageForm handleSubmit={handleSubmit} text={text} setText={setText} />\r\n          </>\r\n        ) : (\r\n          <h3 className=\"no_conv\">Select a user to start conversation </h3>\r\n        )}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}