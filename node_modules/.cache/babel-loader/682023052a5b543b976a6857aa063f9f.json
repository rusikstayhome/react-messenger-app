{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alenr\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\chat-react\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db, auth } from '../firebase';\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from 'firebase/firestore';\nimport User from \"../components/User\";\nimport MessageForm from \"../components/MessageForm\";\nimport Message from \"../components/Message\";\nimport Profile from \"./Profile\";\nimport Moment from \"react-moment\";\nimport axios from \"axios\";\nimport Img from '../user.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [chat, setChat] = useState('');\n  const [text, setText] = useState('');\n  const [msgs, setMsgs] = useState([]);\n  const [autoMsgs, setAutoMsgs] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState('');\n\n  const axios = require('axios');\n\n  const user1 = auth.currentUser.uid;\n  useEffect(() => {\n    const usersRef = collection(db, 'users');\n    const q = query(usersRef, where('uid', 'not-in', [user1]));\n    const unsub = onSnapshot(q, querySnapshot => {\n      let users = [];\n      querySnapshot.forEach(doc => {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return () => unsub();\n  }, []);\n  useEffect(() => {\n    axios.get('https://api.chucknorris.io/jokes/random').then(res => {\n      setAutoMsgs({\n        text: res.data.value,\n        to: user1,\n        createdAt: Timestamp.fromDate(new Date())\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const usersRef = collection(db, 'users');\n    const q = query(usersRef, orderBy('lastMsg', 'desc'));\n    const unsub = onSnapshot(q, querySnapshot => {\n      let users = [];\n      querySnapshot.forEach(doc => {\n        users.push(doc.data());\n      });\n      setUsers(users.filter(user => user.uid !== user1));\n    });\n    return () => unsub();\n  }, []);\n\n  const searchFunction = e => {\n    setSearch(e);\n\n    if (search !== '') {\n      const filtered = users.filter(user => {\n        return user.name.toLowerCase().includes(e.toLowerCase());\n      });\n      setFilteredUsers(filtered);\n    } else setFilteredUsers(users);\n  };\n\n  const selectUser = async user => {\n    setChat(user); // console.log(user);\n\n    const user2 = user.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    const msgsRef = collection(db, 'messages', id, 'chat');\n    const q = query(msgsRef, orderBy('createdAt', 'asc'));\n    onSnapshot(q, querySnapshot => {\n      let msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setMsgs(msgs);\n      console.log(msgs);\n    });\n    const docSnap = await getDoc(doc(db, 'lastMsg', id));\n\n    if (docSnap.data().from !== user1) {\n      await updateDoc(doc(db, 'lastMsg', id), {\n        unread: false\n      });\n    }\n  }; // console.log(msgs);\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user2 = chat.uid;\n    const show = 'show';\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    await updateDoc(doc(db, \"users\", user1), {\n      lastMsg: Timestamp.fromDate(new Date())\n    });\n    await addDoc(collection(db, 'messages', id, 'chat'), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date())\n    });\n    await setDoc(doc(db, 'lastMsg', id), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      unread: true\n    });\n    setText('');\n    axios.get('https://api.chucknorris.io/jokes/random').then(res => {\n      setAutoMsgs({\n        text: res.data.value,\n        from: user2,\n        to: user1,\n        createdAt: Timestamp.fromDate(new Date())\n      });\n      updateDoc(doc(db, \"users\", user2), {\n        text: res.data.value,\n        lastMsg: Timestamp.fromDate(new Date())\n      });\n      addDoc(collection(db, 'messages', user2, 'chat'), {\n        text: res.data.value,\n        from: user2,\n        to: user1,\n        createdAt: Timestamp.fromDate(new Date())\n      });\n      setDoc(doc(db, 'lastMsg', user2), {\n        text: res.data.value,\n        from: user2,\n        to: user1,\n        createdAt: Timestamp.fromDate(new Date()),\n        unread: true\n      });\n      setText('');\n      console.log(autoMsgs.text);\n    });\n  }; // useEffect(() => {\n  // }, [handleSubmit])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users_container\",\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        searchFunction: searchFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), search.length >= 1 ? filteredUsers.map(user => /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        selectUser: selectUser,\n        user1: user1,\n        chat: chat\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)) : users.sort((a, b) => b.lastMsg - a.lastMsg).map(user => /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        selectUser: selectUser,\n        user1: user1,\n        chat: chat\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages_container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages_user\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [msgs.length ? msgs.map((msg, i) => /*#__PURE__*/_jsxDEV(Message, {\n            msg: msg,\n            user1: user1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 38\n          }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message_wrapper`,\n            style: {\n              display: none\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"friend\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: Img,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: autoMsgs.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [/*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: autoMsgs.createdAt.toDate()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), \"/\", autoMsgs.createdAt.toDate().toDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n          handleSubmit: handleSubmit,\n          text: text,\n          setText: setText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"no_conv\",\n        children: \"Select a user to start conversation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"wENMJ31McH5He+uuYBHBJAr7XaQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","setDoc","doc","getDoc","updateDoc","User","MessageForm","Message","Profile","Moment","axios","Img","Home","users","setUsers","chat","setChat","text","setText","msgs","setMsgs","autoMsgs","setAutoMsgs","search","setSearch","filteredUsers","setFilteredUsers","require","user1","currentUser","uid","usersRef","q","unsub","querySnapshot","forEach","push","data","get","then","res","value","to","createdAt","fromDate","Date","filter","user","searchFunction","e","filtered","name","toLowerCase","includes","selectUser","user2","id","msgsRef","console","log","docSnap","from","unread","handleSubmit","preventDefault","show","lastMsg","length","map","sort","a","b","msg","i","display","none","toDate","toDateString"],"sources":["C:/Users/alenr/OneDrive/Рабочий стол/chat-react/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db, auth } from '../firebase';\r\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy, setDoc, doc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport User from \"../components/User\";\r\nimport MessageForm from \"../components/MessageForm\";\r\nimport Message from \"../components/Message\";\r\nimport Profile from \"./Profile\";\r\nimport Moment from \"react-moment\";\r\nimport axios from \"axios\";\r\nimport Img from '../user.jpg'\r\n\r\n\r\nconst Home = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [chat, setChat] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [autoMsgs, setAutoMsgs] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filteredUsers, setFilteredUsers] = useState('');\r\n\r\n  const axios = require('axios');\r\n  const user1 = auth.currentUser.uid\r\n  useEffect(() => {\r\n    const usersRef = collection(db, 'users')\r\n\r\n    const q = query(usersRef, where('uid', 'not-in', [user1]));\r\n    const unsub = onSnapshot(q, querySnapshot => {\r\n      let users = []\r\n      querySnapshot.forEach(doc => {\r\n        users.push(doc.data())\r\n      })\r\n      setUsers(users);\r\n    });\r\n\r\n    return () => unsub();\r\n\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://api.chucknorris.io/jokes/random')\r\n      .then(res => {\r\n\r\n        setAutoMsgs({\r\n          text: res.data.value,\r\n          to: user1,\r\n          createdAt: Timestamp.fromDate(new Date())\r\n        });\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const usersRef = collection(db, 'users')\r\n\r\n    const q = query(usersRef, orderBy('lastMsg', 'desc'));\r\n    const unsub = onSnapshot(q, querySnapshot => {\r\n      let users = []\r\n      querySnapshot.forEach(doc => {\r\n        users.push(doc.data())\r\n      })\r\n      setUsers(users.filter(user => user.uid !== user1));\r\n    });\r\n\r\n    return () => unsub();\r\n\r\n\r\n  }, []);\r\n\r\n  const searchFunction = (e) => {\r\n    setSearch(e);\r\n    if (search !== '') {\r\n      const filtered = users.filter(user => {\r\n        return user.name.toLowerCase().includes(e.toLowerCase())\r\n      });\r\n      setFilteredUsers(filtered);\r\n    } else setFilteredUsers(users);\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const selectUser = async (user) => {\r\n    setChat(user);\r\n    // console.log(user);\r\n\r\n    const user2 = user.uid;\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n\r\n    const msgsRef = collection(db, 'messages', id, 'chat');\r\n    const q = query(msgsRef, orderBy('createdAt', 'asc'));\r\n\r\n    onSnapshot(q, querySnapshot => {\r\n      let msgs = []\r\n      querySnapshot.forEach(doc => {\r\n        msgs.push(doc.data())\r\n      })\r\n      setMsgs(msgs)\r\n      console.log(msgs)\r\n\r\n    })\r\n\r\n    const docSnap = await getDoc(doc(db, 'lastMsg', id))\r\n    if (docSnap.data().from !== user1) {\r\n      await updateDoc(doc(db, 'lastMsg', id), { unread: false })\r\n    }\r\n  }\r\n\r\n  // console.log(msgs);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user2 = chat.uid\r\n    const show = 'show'\r\n\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`\r\n\r\n    await updateDoc(doc(db, \"users\", user1), {\r\n      lastMsg: Timestamp.fromDate(new Date())\r\n    })\r\n\r\n    await addDoc(collection(db, 'messages', id, 'chat'), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date())\r\n    });\r\n\r\n    await setDoc(doc(db, 'lastMsg', id), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      unread: true\r\n    })\r\n    setText('');\r\n\r\n\r\n    axios.get('https://api.chucknorris.io/jokes/random')\r\n      .then(res => {\r\n\r\n        setAutoMsgs({\r\n          text: res.data.value,\r\n          from: user2,\r\n          to: user1,\r\n          createdAt: Timestamp.fromDate(new Date())\r\n        });\r\n        updateDoc(doc(db, \"users\", user2), {\r\n          text: res.data.value,\r\n          lastMsg: Timestamp.fromDate(new Date())\r\n        })\r\n        addDoc(collection(db, 'messages', user2, 'chat'), {\r\n          text: res.data.value,\r\n          from: user2,\r\n          to: user1,\r\n          createdAt: Timestamp.fromDate(new Date())\r\n        });\r\n        setDoc(doc(db, 'lastMsg', user2), {\r\n          text: res.data.value,\r\n          from: user2,\r\n          to: user1,\r\n          createdAt: Timestamp.fromDate(new Date()),\r\n          unread: true\r\n        })\r\n        setText('');\r\n        console.log(autoMsgs.text)\r\n      })\r\n\r\n\r\n  }\r\n  // useEffect(() => {\r\n\r\n\r\n\r\n  // }, [handleSubmit])\r\n\r\n\r\n  return (\r\n    <div className=\"home_container\">\r\n      <div className=\"users_container\">\r\n        <Profile searchFunction={searchFunction} />\r\n\r\n        {search.length >= 1 ?\r\n          filteredUsers.map(user =>\r\n            <User key={user.uid} user={user} selectUser={selectUser} user1={user1} chat={chat} />)\r\n\r\n          :\r\n\r\n          users.sort((a, b) => b.lastMsg - a.lastMsg).map(user =>\r\n            <User key={user.uid} user={user} selectUser={selectUser} user1={user1} chat={chat} />)\r\n\r\n        }\r\n      </div>\r\n      <div className=\"messages_container\">\r\n        {chat ? (\r\n          <>\r\n            <div className=\"messages_user\">\r\n              <h3>{chat.name}</h3>\r\n            </div>\r\n            <div className=\"messages\">\r\n              {msgs.length ?\r\n                msgs.map((msg, i) => <Message key={i} msg={msg} user1={user1} />)\r\n                : null}\r\n\r\n              <div className={`message_wrapper`}\r\n                style={{ display: none }}>\r\n                <p className='friend'>\r\n                  <img src={Img} alt='avatar' />\r\n                  <span>{autoMsgs.text}</span>\r\n                  <br />\r\n                  <small>\r\n                    <Moment fromNow>\r\n                      {autoMsgs.createdAt.toDate()}\r\n\r\n                    </Moment>\r\n                    /{autoMsgs.createdAt.toDate().toDateString()}\r\n\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <MessageForm handleSubmit={handleSubmit} text={text} setText={setText} />\r\n          </>\r\n        ) : (\r\n          <h3 className=\"no_conv\">Select a user to start conversation </h3>\r\n        )}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}